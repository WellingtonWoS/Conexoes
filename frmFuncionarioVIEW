
package VIEW;

import DAO.FuncionarioDAO;
import DTO.FuncionarioDTO;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class frmFuncionarioVIEW extends javax.swing.JFrame {
    
    Vector<Integer> id_cargo = new Vector<Integer>();

    public frmFuncionarioVIEW() {
        initComponents();
        listaValoresFuncionario();
        restauraDadosComboBoxCargo();
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaFuncionario = new javax.swing.JTable();
        btnPesquisar = new javax.swing.JButton();
        txtCod = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        btnCarregarCampos = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        cbxCargo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nome");

        jLabel2.setText("Endereço");

        btnCadastrar.setText("CADASTRAR");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        tabelaFuncionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "CÓDIGO", "NOME", "ENDEREÇO"
            }
        ));
        jScrollPane1.setViewportView(tabelaFuncionario);

        btnPesquisar.setText("PESQUISAR");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        txtCod.setText("Código");

        txtCodigo.setEnabled(false);

        btnCarregarCampos.setText("CARREGAR CAMPOS");
        btnCarregarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarCamposActionPerformed(evt);
            }
        });

        btnLimpar.setText("LIMPAR");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnAlterar.setText("ALTERAR");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setText("EXCLUIR");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        cbxCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));
        cbxCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCargoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(txtNome)
                                .addComponent(txtEndereco)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnCadastrar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnPesquisar)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAlterar)
                                .addGap(18, 18, 18)
                                .addComponent(btnExcluir)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCod)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnLimpar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cbxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtCodigo)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCarregarCampos))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCod))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar)
                    .addComponent(btnPesquisar)
                    .addComponent(btnLimpar)
                    .addComponent(cbxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlterar)
                    .addComponent(btnCarregarCampos)
                    .addComponent(btnExcluir))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {                                             
    CadastrarFuncionario(); 
    listaValoresFuncionario();
    LimparCampos();
        
    }                                            

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {                                             
    listaValoresFuncionario();
        
        
    }                                            

    private void btnCarregarCamposActionPerformed(java.awt.event.ActionEvent evt) {                                                  
    CarregarCampos();
    }                                                 

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {                                          
        LimparCampos();
    }                                         

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {                                           
       AlterarFuncionario();
       listaValoresFuncionario();
       LimparCampos();
    }                                          

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {                                           
       ExcluirFuncionario();
       listaValoresFuncionario();
       LimparCampos();
    }                                          

    private void cbxCargoActionPerformed(java.awt.event.ActionEvent evt) {                                         
    }                                        

    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmFuncionarioVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnCarregarCampos;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JComboBox<String> cbxCargo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaFuncionario;
    private javax.swing.JLabel txtCod;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNome;
    // End of variables declaration                   

    private void listaValoresFuncionario(){
        
        try {
            
            FuncionarioDAO objfuncionariodao = new FuncionarioDAO();
            
            DefaultTableModel model = (DefaultTableModel) tabelaFuncionario.getModel();
            model.setNumRows(0);
            
            ArrayList<FuncionarioDTO> lista = objfuncionariodao.PesquisarFuncionario();
            
            for(int num = 0; num < lista.size(); num++){
                
               model.addRow(new Object[]{
                   lista.get(num).getId_funcionario(),
                   lista.get(num).getNome_funcionario(),
                   lista.get(num).getEndereco_funcionario()
               });
                
            }
                    
        } catch (Exception erro) {
            
            JOptionPane.showMessageDialog(null, "Listar Valores VIEW" + erro);
            
        }
        
    }

private void CarregarCampos(){
    
    int setar = tabelaFuncionario.getSelectedRow();
    
    txtCodigo.setText(tabelaFuncionario.getModel().getValueAt(setar, 0). toString());
    txtNome.setText(tabelaFuncionario.getModel().getValueAt(setar, 1). toString());
    txtEndereco.setText(tabelaFuncionario.getModel().getValueAt(setar, 2). toString());
    
    }

private void CadastrarFuncionario() {
    
    String nome, endereco;
        
        nome = txtNome.getText();
        endereco = txtEndereco.getText();
        
        FuncionarioDTO objfuncionariodto = new FuncionarioDTO(); //Criando um objeto para instanciar parâmetros de DTO
        objfuncionariodto.setNome_funcionario(nome);   //Aqui podemos selecionar o SET ou GET de DTO. SETé armazenar dados informados do usuário
        objfuncionariodto.setEndereco_funcionario(endereco);
        
        FuncionarioDAO objfuncionariodao = new FuncionarioDAO();
        objfuncionariodao.cadastrarFuncionario(objfuncionariodto);
    
    }
    
private void LimparCampos(){
    
    txtCodigo.setText("");
    txtNome.setText("");
    txtEndereco.setText("");
    
    txtNome.requestFocus();
    
    }

private void AlterarFuncionario(){
    
    int id_funcionario;
    String nome_funcionario, endereco_funcionario;
    
    id_funcionario = Integer.parseInt(txtCodigo.getText());
    nome_funcionario = txtNome.getText();
    endereco_funcionario = txtEndereco.getText();
    
    FuncionarioDTO objfuncionariodto = new FuncionarioDTO();
    objfuncionariodto.setId_funcionario(id_funcionario);
    objfuncionariodto.setNome_funcionario(nome_funcionario);
    objfuncionariodto.setEndereco_funcionario(endereco_funcionario);
    
    FuncionarioDAO objfuncionariodao = new FuncionarioDAO();
    objfuncionariodao.alterarFuncionario(objfuncionariodto);
    
    }

private void ExcluirFuncionario(){
    
    int id_funcionario;
    
    id_funcionario = Integer.parseInt(txtCodigo.getText());
    
    FuncionarioDTO objfuncionariodto = new FuncionarioDTO();
    objfuncionariodto.setId_funcionario(id_funcionario);
    
    FuncionarioDAO objfuncionariodao = new FuncionarioDAO();
    objfuncionariodao.excluirFuncionario(objfuncionariodto, objfuncionariodto);
    
}

public void restauraDadosComboBoxCargo(){
    
    
    
    try {
        
       FuncionarioDAO objfuncionariodao = new FuncionarioDAO();
       ResultSet rs = objfuncionariodao.listaCargo();
       
       while(rs.next()){
           id_cargo.addElement(rs.getInt(1));
           cbxCargo.addItem(rs.getString(2));
       }
        
    } catch (SQLException erro) {
        
        JOptionPane.showMessageDialog(null, "Carregar cargo VIEW" + erro);
        
    }
    
  }

}
